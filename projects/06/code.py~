

class Code:
    '''
    Translates Hack assembly language mnemonics into binary codes
    '''

    def dest(mn):
        dest_binary = '000'
        if mn.find('M') != -1:
            dest_binary[2] = '1'
        if mn.find('D') != -1:
            dest_binary[1] = '1'
        if mn.find('A') != -1:
            dest_binary[0] = '1'
        return dest_binary

    def comp(mn):


    def jump(mn):
        if mn == 'JGT':
            return '001'
        else if mn == 'JEQ':
            return '010'
        else if mn == 'JGE':
            return '011'
        else if mn == 'JLT':
            return '100'
        else if mn == 'JNE':
            return '101'
        else if mn == 'JLE':
            return '110'
        else if mn == 'JMP':
            return '111'
        else:
            return '000'
        
