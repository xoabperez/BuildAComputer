

class Symbol:
    """
    Keeps a correspondence between symbolic labels and numeric addresses.
    """

    def __init__(self):
        """
        Creates a new empty symbol table
        """
        self.table = dict()

    def addEntry(self, symbol, address):
        """
        Adds the pair {symbol:address} to the table
        """
        self.table[symbol] = address

    def contains(self, symbol):
        """
        Returns whether the table contains the given symbol
        """
        return symbol in self.table

    def getAddress(self, symbol):
        """
        Returns the address associated with the symbol
        """
        return self.table(symbol)
